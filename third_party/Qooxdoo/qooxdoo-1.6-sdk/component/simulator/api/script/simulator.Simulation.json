{"attributes": {"name": "Simulation", "packageName": "simulator", "superClass": "qx.core.Object", "isSingleton": true, "fullName": "simulator.Simulation", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Automated <span class=\"caps\">GUI</span> test of a qooxdoo application using QxSelenium. Provides access\nto the <span class=\"caps\">AUT</span>&#8216;s log messages and any exceptions caught by qooxdoo&#8217;s global error\nhandling. Also supports event testing.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "overriddenFrom": "qx.core.Object", "isCtor": true, "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"type": "String", "name": "AUTWINDOW", "value": "selenium.qxStoredVars[\"autWindow\"]"}, "type": "constant"}, {"attributes": {"type": "String", "name": "QXAPPLICATION", "value": "qx.core.Init.getApplication()"}, "type": "constant"}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "name": "_addOwnFunction"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "funcName"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the function to be added</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>the function to be added</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a user-defined function to the &#8220;qx.Simulation&#8221; namespace of the\napplication under test. This function can then be called using\n<code>selenium.getEval(&#8220;selenium.browserbot.getCurrentWindow().qx.Simulation.funcName();&#8221;)</code></p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_includeFeatures"}, "type": "method", "children": [{"attributes": {"text": "<p>Includes and initializes features as configured by settings</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_prepareNameSpace"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "", "name": "win"}, "type": "param", "children": [{"attributes": {"text": "<p>JavaScript snippet that evaluates as a Window object\naccessible from the current Selenium instance. Default: The <span class=\"caps\">AUT</span>&#8216;s window.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Attaches a &#8220;Simulation&#8221; namespace object to the specified window&#8217;s qx\nobject. This will be used to store custom methods added by the testing\nframework using {@see #_addOwnFunction}. If no window is specified, the\n<span class=\"caps\">AUT</span>&#8216;s window is used.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_setupEnvironment"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds a map to the global selenium object in the <span class=\"caps\">AUT</span> that is used to store\ntesting-related data. Also stores a reference to the <span class=\"caps\">AUT</span>&#8216;s window object\nthat is used to avoid calling\n<code>selenium.browserbot.getCurrentWindow()</code> repeatedly.\nThis method must called be whenever a qooxdoo application is (re)loaded.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_storeEval"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "code"}, "type": "param", "children": [{"attributes": {"text": "<p>JavaScript snippet to be evaluated</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "keyName"}, "type": "param", "children": [{"attributes": {"text": "<p>The name for the key the eval result will be\nstored under.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Evaluates a JavaScript snippet and stores the result in the\n&#8220;qxStoredVars&#8221; map attached to the <span class=\"caps\">AUT</span>&#8216;s global selenium object.\nStored values can be retrieved through Selenium.getEval:\n<code>getEval(&#8216;selenium.qxStoredVars[&#8220;keyName&#8221;]&#8217;)</code></p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "name": "addFunctionToAut"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the function to be added</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>The function to be added</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "", "name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional list of arguments for the function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a user-defined function to the &#8220;qx.Simulation&#8221; namespace of the\napplication under test. This function can then be called using\n<code>selenium.getEval(&#8220;selenium.browserbot.getCurrentWindow().qx.Simulation[functionName]();&#8221;)</code></p>\n\n<p>In contrast to {@link _addOwnFunction}, the <span class=\"caps\">AUT</span> window&#8217;s Function object is\nused to instantiate a &#8220;local&#8221; function. This is necessary e.g. in FF6+,\nwhere function obejcts from other windows don&#8217;t have the same properties\nand methods, meaning e.g. they can&#8217;t be used as qx event listener callbacks.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getWidgetOrNull"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>(Qx)Selenium locator string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses the given locator to search the <span class=\"caps\">AUT</span> for a qooxdoo widget. If found,\nthe return value of its toString method is returned. Otherwise, null is\nreturned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>String representation of the widget or null</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getWidgetPropertyValueOrNull"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>(Qx)Selenium locator string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "property"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of a qooxdoo property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses the given locator to search the <span class=\"caps\">AUT</span> for a qooxdoo widget. If found,\nthe getter function for the property with the given name is called\nand the value is returned. If no widget is found or the property does not\nexist, null is returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Property value string or null</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "logEnvironment"}, "type": "method", "children": [{"attributes": {"text": "<p>Logs the Simulation&#8217;s start date, <span class=\"caps\">URL</span> of the <span class=\"caps\">AUT</span> and the operating system\nplatform.</p>"}, "type": "desc"}]}, {"attributes": {"name": "logResults"}, "type": "method", "children": [{"attributes": {"text": "<p>Logs disposer debug messages, exceptions caught by qooxdoo&#8217;s global error\nhandling and/or the <span class=\"caps\">AUT</span>&#8216;s log messages, depending on the test\nconfiguration used.\nNote: Disposer debug logging will shut down the qx application so this\nshould be the last action of the test case.</p>"}, "type": "desc"}]}, {"attributes": {"name": "logRunTime"}, "type": "method", "children": [{"attributes": {"text": "<p>Logs the total duration of this simulation.</p>"}, "type": "desc"}]}, {"attributes": {"name": "logUserAgent"}, "type": "method", "children": [{"attributes": {"text": "<p>Logs the test browser&#8217;s user agent string.</p>"}, "type": "desc"}]}, {"attributes": {"name": "qxOpen"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "", "name": "uri"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional <span class=\"caps\">URI</span> of the qooxdoo application to be\nloaded. Default: The <span class=\"caps\">AUT</span> host/path defined in the settings.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Loads a qooxdoo application in the test browser and prepares\nit for testing. If no <span class=\"caps\">URI</span> is given, the current <span class=\"caps\">AUT</span> is reloaded.</p>"}, "type": "desc"}]}, {"attributes": {"name": "qxShutdown"}, "type": "method", "children": [{"attributes": {"text": "<p>Shuts down the <span class=\"caps\">AUT</span>&#8216;s qooxdoo application.</p>"}, "type": "desc"}]}, {"attributes": {"name": "startSession"}, "type": "method", "children": [{"attributes": {"text": "<p>Starts the QxSelenium session, opens the <span class=\"caps\">AUT</span> in the browser and waits\nuntil the qooxdoo application is ready. Also makes the necessary\npreparations to enable global error logging and/or application log\nextraction if these options are configured.</p>"}, "type": "desc"}]}, {"attributes": {"name": "wait"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "interval"}, "type": "param", "children": [{"attributes": {"text": "<p>Time (in milliseconds) to wait.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Pauses test execution for a given amount of time.</p>"}, "type": "desc"}]}, {"attributes": {"name": "waitForQxApplication"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "timeout"}, "type": "param", "children": [{"attributes": {"text": "<p>Time to wait (in milliseconds). Default: 3000</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "window"}, "type": "param", "children": [{"attributes": {"text": "<p>Window the qooxdoo application is running in</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "DOMWindow"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Waits until qx.core.Init.getApplication() in the <span class=\"caps\">AUT</span> window returns\nsomething.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>If the application isn&#8217;t ready within the timeout</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"name": "waitForWidget"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>(Qx)Selenium locator string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "", "name": "timeout"}, "type": "param", "children": [{"attributes": {"text": "<p>Timeout in milliseconds. Default: 5000</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Repeatedly tries to find a visible widget using the given locator until\nthe timeout is reached.</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>an Error if no visible widget is found before the timeout is\nreached</p>"}, "type": "desc"}]}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "getInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The singleton instance of this class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "simulator.Simulation"}, "type": "entry"}]}]}]}]}]}