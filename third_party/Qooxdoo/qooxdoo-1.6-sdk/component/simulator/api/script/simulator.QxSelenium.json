{"attributes": {"name": "QxSelenium", "packageName": "simulator", "superClass": "qx.core.Object", "isSingleton": true, "fullName": "simulator.QxSelenium", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Imports the com.thoughtworks.selenium.QxSelenium Java class and creates\nan instance. If the &#8220;simulator.threadSafe&#8221; setting is active, a session\ncreated by Selenium Grid&#8217;s ThreadSafeSeleniumSessionStorage is returned\ninstead.</p>\n\n<p>QxSelenium extends DefaultSelenium (see {@link <a href=\"http://jarvana.com/jarvana/view/org/seleniumhq/selenium/selenium-rc-documentation/1.0/selenium-rc-documentation-1.0-doc.zip!/java/com/thoughtworks/selenium/DefaultSelenium.html\">http://jarvana.com/jarvana/view/org/seleniumhq/selenium/selenium-rc-documentation/1.0/selenium-rc-documentation-1.0-doc.zip!/java/com/thoughtworks/selenium/DefaultSelenium.html</a>}),\nadding the qooxdoo-specific commands documented below.</p>\n\n<p>Commands that simulate mouse clicks such as {@link #qxClick} take a\nparameter that allows configuring the generated events. The value  must be a\nstring of comma-separated <i>key=value pairs</i>. The following settings are\nsupported:</p>\n\n<pre>double: fire a \"dblclick\" event\n  - possible values: true, false\n  - default value  : false\n button: the mouse button to be pressed\n  - possible values: left, right, middle\n  - default value  : left\n clientX and clientY: mouse coordinates\n  - possible values: any positive integer\n  - default value  : 0\n shiftKey, altKey, metaKey: additional modifier keys being pressed while\n clicking\n  - possible values: true, false\n  - default value  : false</pre>\n\n<p>Getter commands will always return a Java string object. This should always\nbe converted to a JavaScript string for comparisons or string operations,\ne.g. by calling String(qxSeleniumReturnValue)</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "overriddenFrom": "qx.core.Object", "isCtor": true, "name": "ctor"}, "type": "method"}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"name": "getQxObjectFunction"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo widget&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "functionName"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the function to be called</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes the given function of a qooxdoo widget identified by a locator.\nIf the widget does not contain the referenced function, an exception will\nbe thrown.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The function&#8217;s return value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getQxObjectHash"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo widget&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "", "name": "script"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional JavaScript snippet to be executed in the\nwidget&#8217;s context</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a qooxdoo object&#8217;s ID as generated by qx.core.ObjectRegistry.\nIf only the <i>locator</i> parameter is given, the hash code of the widget\nit identifies will be returned. If the optional <i>script</i> parameter is\ngiven, its value will be executed as a function in the widget&#8217;s context\nand the hash of the object it returns will be returned instead. Example:</p>\n\n<pre>getQxObjectHash(\"myTable\", \"return this.getTableModel();\");</pre>\n\n<p>will find a qooxdoo table with the <span class=\"caps\">HTML</span> ID &#8220;myTable&#8221; and return the hash\nof its table model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the object&#8217;s hash code</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getQxTableColumnIndexByName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>name The column name to be searched for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Searches the given table for a column with the given name and returns the\nvisible column index. Note that this can differ from the column&#8217;s index\nin the table model if there are invisible columns and/or the column order\nhas been changed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The found column index</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getQxTableModelColCount"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses the standard qx locators to find a table, then returns the number of\ncolumns from the table model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The number of columns defined in the table model</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getQxTableModelColumnIds"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses the standard qx locators to find a table then returns a semicolon-\nseparated list of column IDs from the table model. Note that this can\ndiffer from the columns that are actually visible in the table.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A list of column IDs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getQxTableRowCount"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses the standard qx locators to find a table, then returns the number of\nrows defined in the table model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The number of rows defined in the table model</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getQxTableSelectedRowData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a qooxdoo table&#8217;s selected row data (an array of rows which are\narrays of cell values). Data will be returned as a <span class=\"caps\">JSON</span> string if a <span class=\"caps\">JSON</span>\nimplementation is available (either the browser&#8217;s or qooxdoo&#8217;s).\nOtherwise, the return value is a comma-separated string that must be\nparsed by the caller.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getQxTableValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "params"}, "type": "param", "children": [{"attributes": {"text": "<p>A string that should contain row and column\nidentifers (see {@link #qxTableClick}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses the standard qx locators to find a table, then returns the value\nof the specified cell from the table model.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The value of the cell. Primitive types will be returned\nas strings, Objects will be serialized using <span class=\"caps\">JSON</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getQxTableVisibleColCount"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses the standard qx locators to find a table, then returns the number of\ncurrently visible columns.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The number of visible columns</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getQxTableVisibleColumnIds"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses the standard qx locators to find a table then returns a semicolon-\nseparated list of column IDs. Only visible columns are included.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A list of column IDs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getRunInContext"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo widget&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "script"}, "type": "param", "children": [{"attributes": {"text": "<p>JavaScript snippet</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a new function with the value of the <i>script</i> parameter as body.\nThis function is bound to the context of the qooxdoo widget returned by\nthe given locator, i.e. <i>this</i> within the script will refer to the\nwidget. The function is then called and the return value is serialized in\n<span class=\"caps\">JSON</span> format (unless it is a string or number) and returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Return value of the generated function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "qxClick"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo widget&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "params"}, "type": "param", "children": [{"attributes": {"text": "<p>comma-separated list of additional parameters</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Clicks on a qooxdoo widget.\nAlways synthesizes the following events: <i>mouseover</i>, <i>mousedown</i>,\n<i>mouseup</i>.\nAdditionally, <i>click</i>, <i>dblclick</i> or <i>contextmenu</i> will be fired\ndepending on the specified params</p>"}, "type": "desc"}]}, {"attributes": {"name": "qxClickAt"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo widget&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "params"}, "type": "param", "children": [{"attributes": {"text": "<p>comma-separated list of additional parameters</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Clicks on a qooxdoo widget, adding the widget&#8217;s coordinates to the\ngenerated events.</p>"}, "type": "desc"}]}, {"attributes": {"name": "qxDragAndDrop"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo widget&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "offset"}, "type": "param", "children": [{"attributes": {"text": "<p>offset in pixels from the current location to\nwhich the element should be moved, e.g., &#8221;+70,-300&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "", "name": "targetLocator"}, "type": "param", "children": [{"attributes": {"text": "<p>(optional) locator for the drop target.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Simulates dragging an element a certain distance and then dropping it.\nOptionally executes <i>mouseover</i>, <i>mousemove</i> and __mouseup __on a\nsecond element specified by <i>targetLocator</i></p>"}, "type": "desc"}]}, {"attributes": {"name": "qxDragAndDropToObject"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo widget&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>an element whose location (i.e., whose\ncenter-most pixel) will be the point where the dragged element is dropped</p>"}, "type": "desc"}]}]}, {"attributes": {"text": "<p>Simulates dragging an element and dropping it on another element. The\nsecond parameter is the locator of the drop target element, e.g.:</p>\n\n<pre>qxDragAndDropToObject(\"qxhv=/qx.ui.form.List/child[0]\",\n\"qxhv=qx.ui.form.TextArea\");</pre>\n\n<p>For qx.ui.table.Table and widgets that inherit from it, drag operations\nstarting from a specific table cell are supported. In this case, the\nparameters string must contain the information needed to target a cell,\nas expected by {@link qxTableClick}. Also, the drop target locator must\nbe prefaced with &#8220;target=&#8221;, e.g.:</p>\n\n<pre>qxDragAndDropToObject(\"qxhv=/qx.ui.table.Table\",\n\"target=qxhv=qx.ui.form.TextArea,row=5,cell=3\");</pre>"}, "type": "desc"}]}, {"attributes": {"name": "qxEditTableCell"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "params"}, "type": "param", "children": [{"attributes": {"text": "<p>comma-separated list of additional parameters</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Simulates user interaction with editable table cells. <strong><span class=\"caps\">NOTE</span></strong>: The\ntarget cell&#8217;s editing mode must be activated immediately before this\ncommand is used, e.g. by executing a double click on it using the\n{@link #qxTableClick} command with &#8220;double=true&#8221; added to the params.</p>\n\n<p>The following cell editor types are supported:</p>\n\n<p><strong>Text fields</strong> ({@link qx.ui.table.celleditor.PasswordField},\n{@link qx.ui.table.celleditor.TextField},\n{@link qx.ui.table.celleditor.ComboBox}): Use either the <i>type</i> or\n<i>typeKeys</i> parameters (see {@link #qxType} and {@link #qxTypeKeys}).\nExamples:</p>\n\n<pre>qxSelenium.qxEditTableCell(\"qxh=qx.ui.table.Table\", \"type=Some text\");\nqxSelenium.qxEditTableCell(\"myTable\", \"typeKeys=Lots of events\");</pre>\n\n<p><strong>Select boxes</strong> ({@link qx.ui.table.celleditor.SelectBox},\n{@link qx.ui.table.celleditor.ComboBox}): Use the <i>selectFromBox</i>\nparameter. The value must be a qxh locator step that identifies the list\nitem to be clicked.\nExamples:</p>\n\n<pre>qxSelenium.qxEditTableCell(\"qxh=qx.ui.table.Table\", \"selectFromBox="}, "type": "desc"}]}, {"attributes": {"name": "qxTableClick"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "params"}, "type": "param", "children": [{"attributes": {"text": "<p>comma-separated list of additional parameters</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses the given locator to find a {@link qx.ui.table.Table}, then\nsimulates a click on the table at the given row/column position.\nNote, your locator should only find the table itself. Sub-widgets, e.g.\nComposite/Scroller/Clipper will be automatically added to the locator as\nrequired.</p>\n\n<p>The column to click can be located using the index, ID or name as defined\nin the table model by adding one of the <i>col</i>, <i>colId</i> or <i>colName</i>\nparameters to the &#8220;params&#8221; string.\nAlternatively, a specific cell can be located by RegExp matching its\ncontent using the <i>cellValue</i> parameter.\n<strong><span class=\"caps\">NOTE</span></strong>: This currently only works with tables using a Simple table model\n({@link qx.ui.table.model.Simple})!</p>\n\n<p>Supported params keys:</p>\n\n<pre>- All mouse event parameters\n- row: Index of the table row to click\n- col: Index of the table column to click\n- colId: ID of the column to click\n- colName: Name of the column to click\n- cellValue: Content of a (text) cell to click</pre>"}, "type": "desc"}]}, {"attributes": {"name": "qxTableHeaderClick"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo table&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "params"}, "type": "param", "children": [{"attributes": {"text": "<p>comma-separated list of additional parameters</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Simulates clicking a header cell of a {@link qx.ui.table.Table}.</p>\n\n<p>The column to click can be located using the index, ID or name as defined\nin the table model by adding one of the <i>col</i>, <i>colId</i> or <i>colName</i>\nparameters to the &#8220;params&#8221; string.</p>"}, "type": "desc"}]}, {"attributes": {"name": "qxType"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo widget&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>the value to set</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the value of a qooxdoo text field widget which can either be the\nwidget returned by the given locator, or one of its child widgets (i.e.\nfor {@link qx.ui.form.ComboBox}).\nDoes <strong>not</strong> simulate key events &#8211; only the <span class=\"caps\">HTML</span> text field&#8217;s <i>value</i>\nattribute is set.</p>"}, "type": "desc"}]}, {"attributes": {"name": "qxTypeKeys"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "locator"}, "type": "param", "children": [{"attributes": {"text": "<p>an element locator that finds a qooxdoo widget&#8217;s\n<span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>the value to type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Simulates a user entering text into any qooxdoo widget that either\ninherits from {@link qx.ui.form.AbstractField}  or has a child control\nthat does. <i>keydown</i>, <i>keypress</i> and <i>keyup</i> events are fired for\neach character in the given value.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "getInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The singleton instance of this class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "simulator.QxSelenium"}, "type": "entry"}]}]}]}]}]}